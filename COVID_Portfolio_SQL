-- Covid 19 Data Exploration 
-- Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

-- Select all records from CovidDeaths where continent is not null, ordered by the 3rd and 4th columns
Select *
From Method56.CovidDeaths
Where continent is not null 
order by 3, 4;

-- Select specific columns from CovidDeaths where continent is not null, ordered by the 1st and 2nd columns
Select 
    Location, 
    date, 
    total_cases, 
    new_cases, 
    total_deaths, 
    population
From Method56.CovidDeaths
Where continent is not null 
order by 1, 2;

-- Calculate Death Percentage from CovidDeaths for locations like '%states%', where continent is not null, ordered by the 1st and 2nd columns
Select 
    Location, 
    date, 
    total_cases,
    total_deaths, 
    (total_deaths / total_cases) * 100 as DeathPercentage
From Method56.CovidDeaths
Where location like '%states%'
    and continent is not null 
order by 1, 2;

-- Calculate Percent Population Infected from CovidDeaths, ordered by the 1st and 2nd columns
Select 
    Location, 
    date, 
    Population, 
    total_cases,  
    (total_cases / population) * 100 as PercentPopulationInfected
From Method56.CovidDeaths
-- Where location like '%states%'
order by 1, 2;

-- Countries with Highest Infection Rate compared to Population, ordered by PercentPopulationInfected descending
Select 
    Location, 
    Population, 
    MAX(total_cases) as HighestInfectionCount,  
    Max((total_cases / population)) * 100 as PercentPopulationInfected
From Method56.CovidDeaths
-- Where location like '%states%'
Group by Location, Population
order by PercentPopulationInfected desc;

-- Countries with Highest Death Count per Population, where continent is not null, ordered by TotalDeathCount descending
Select 
    Location, 
    MAX(cast(Total_deaths as int)) as TotalDeathCount
From Method56.CovidDeaths
-- Where location like '%states%'
Where continent is not null 
Group by Location
order by TotalDeathCount desc;

-- Showing continents with the highest death count per population, where continent is not null, ordered by TotalDeathCount descending
Select 
    continent, 
    MAX(cast(Total_deaths as int)) as TotalDeathCount
From Method56.CovidDeaths
-- Where location like '%states%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc;

-- GLOBAL NUMBERS from CovidDeaths, where continent is not null, ordered by date
Select 
    SUM(new_cases) as total_cases, 
    SUM(cast(new_deaths as int)) as total_deaths, 
    SUM(cast(new_deaths as int)) / SUM(New_Cases) * 100 as DeathPercentage
From Method56.CovidDeaths
-- Where location like '%states%'
where continent is not null 
-- Group By date
order by 1, 2;

-- Total Population vs Vaccinations from CovidDeaths and CovidVaccinations, where continent is not null, ordered by location and date
Select 
    dea.continent, 
    dea.location, 
    dea.date, 
    dea.population, 
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INT64)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From Method56.CovidDeaths dea
Join Method56.CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null 
order by 2, 3;

-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac AS (
    SELECT 
        dea.continent, 
        dea.location, 
        dea.date, 
        dea.population, 
        vac.new_vaccinations,
        SUM(CAST(vac.new_vaccinations AS INT64)) OVER (PARTITION BY dea.Location ORDER BY dea.location, dea.Date) AS RollingPeopleVaccinated
    FROM Method56.CovidDeaths dea
    JOIN Method56.CovidVaccinations vac ON dea.location = vac.location AND dea.date = vac.date
    WHERE dea.continent IS NOT NULL 
)
SELECT *, (RollingPeopleVaccinated / Population) * 100 AS RollingPeopleVaccinated
FROM PopvsVac;

-- Using Temp Table to perform Calculation on Partition By in previous query

-- DROP Table if exists #PercentPopulationVaccinated;
-- Create Table #PercentPopulationVaccinated
-- (
--     Continent nvarchar(255),
--     Location nvarchar(255),
--     Date datetime,
--     Population numeric,
--     New_vaccinations numeric,
--     RollingPeopleVaccinated numeric
-- );

-- Insert into #PercentPopulationVaccinated
-- Select 
--     dea.continent, 
--     dea.location, 
--     dea.date, 
--     dea.population, 
--     vac.new_vaccinations,
--     SUM(CONVERT(int, vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
-- From Method56.CovidDeaths dea
-- Join Method56.CovidVaccinations vac
--     On dea.location = vac.location
--     and dea.date = vac.date
-- -- where dea.continent is not null 
-- -- order by 2,3

-- Select 
--     *, 
--     (RollingPeopleVaccinated / Population) * 100
-- From #PercentPopulationVaccinated;

-- Creating View to store data for later visualizations
Create View Method56.PercentPopulationVaccinated as
Select 
    dea.continent, 
    dea.location, 
    dea.date, 
    dea.population, 
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INT64)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From Method56.CovidDeaths dea
Join Method56.CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null;
